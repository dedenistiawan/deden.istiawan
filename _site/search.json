[
  {
    "objectID": "talks.html",
    "href": "talks.html",
    "title": "Talks",
    "section": "",
    "text": "Transformasi Data Menjadi Visual yang Bermakna\n\n\n\n\n\nVisualisasi data bukan sekadar tentang grafik dan angka, melainkan cara untuk menyampaikan cerita yang bermakna. \n\n\n\n\n\nWednesday, the 15th of April, 2020\n\n\nDeden Istiawan\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications (25 + 3)",
    "section": "",
    "text": "Order By\n       Default\n         \n          Issued - Oldest\n        \n         \n          Issued - Newest\n        \n         \n          Title\n        \n         \n          Journal\n        \n         \n          Rank\n        \n         \n          First\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nIssued\n\n\nTitle\n\n\nJournal\n\n\nFirst\n\n\nRank\n\n\n\n\n\n\nDecember,2024\n\n\nMeningkatkan keterampilan profesional mahasiswa: Strategi penguatan soft skills untuk sukses di era digital\n\n\nJurnal Pengabdian Masyarakat Sains Dan Teknologi\n\n\n‚ÄÉ‚ÄÉ‚ÄÉ\n\n\n2/4\n\n\n\n\nMay,2024\n\n\nPelatihan microsoft excel dalam pengembangan profesional PT. Nusantara building industries\n\n\nJurnal Pengabdian Informatika\n\n\n‚ÄÉ‚ÄÉ‚ÄÉ\n\n\n2/4\n\n\n\n\nFebruary,2024\n\n\nPelatihan microsoft excel untuk peningkatan soft skills anggota perhimpunan human resources development jawa tengah\n\n\nJurnal Pengabdian Masyarakat Intimas\n\n\nAs first or co-first\n\n\n1/5\n\n\n\n\nAugust,2023\n\n\nPelatihan aplikasi canva untuk meningkatkan kemampuan desain grafis anggota perhimpunan human resources development jawa tengah\n\n\nJurnal Pengabdian Masyarakat Intimas\n\n\nAs first or co-first\n\n\n2/5\n\n\n\n\nJuly,2023\n\n\nReligious harmony index in special region of yogyakarta\n\n\n‚ÄúProfetika: Jurnal Studi Islam‚Äù\n\n\nAs first or co-first\n\n\n1/4\n\n\n\n\nJuly,2023\n\n\nAnalysis of time optimization for watermark image quality using run length encoding compression\n\n\nJournal of Intelligent Computing and Health\n\n\n‚ÄÉ‚ÄÉ‚ÄÉ\n\n\n3/3\n\n\n\n\nJune,2023\n\n\nPortrait of religious harmony in special capital region of jakarta, indonesia\n\n\nRevista de Gest√£o Social e Ambiental\n\n\nAs first or co-first\n\n\n1/7\n\n\n\n\nMay,2023\n\n\nHybrid genetic feature selection and support vector machine for prediction LQ45 index in indonesia stock exchange\n\n\nAIP Conference Proceedings\n\n\nAs first or co-first\n\n\n2/4\n\n\n\n\nMarch,2023\n\n\nMapping religious harmony in the special capital region jakarta using k-means algorithm\n\n\nJournal of Intelligent Computing and Health\n\n\nAs first or co-first\n\n\n1/4\n\n\n\n\nDecember,2022\n\n\nAnalisis indeks kerukunan umat beragama di provinsi kalimantan barat\n\n\nInternational Journal of Intelligent Engineering and\n\n\nAs first or co-first\n\n\n2/3\n\n\n\n\nDecember,2021\n\n\nPenerapan algoritma C4. 5 untuk klasifikasi lahan kritis kabupaten grobogan\n\n\nJournal of Applied Statistics and Data Mining\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nDecember,2021\n\n\nPenerapan algoritma self organizing maps untuk pengelompokkan penyandang masalah kesejahteraan sosial di provinsi jawa tengah\n\n\nJournal of Applied Statistics and Data Mining\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nDecember,2021\n\n\nPengelompokan tingkat kemiskinan kabupaten/kota di provinsi jawa timur mengunakan algoritma k-means++\n\n\nJournal of Applied Statistics and Data Mining\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nJune,2021\n\n\nPenentuan pusat awal klaster algoritma k-means untuk pengelompokan kabupaten/kota di jawa timur berdasarkan tingkat kemiskinan\n\n\nJournal of Applied Statistics and Data Mining\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nJanuary,2021\n\n\nPrediction of LQ45 index in indonesia stock exchange: A comparative study of machine learning techniques\n\n\nInternational Journal of Intelligent Engineering and\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nOctober,2020\n\n\nComparative analysis of classification algorithms for critical land prediction in agricultural cultivation areas\n\n\nJurnal Teknologi dan Sistem Komputer\n\n\nAs first or co-first\n\n\n1/1\n\n\n\n\nMarch,2020\n\n\nPoverty mapping in central java province using k-means algorithm\n\n\nJournal of Intelligent Computing and Health\n\n\nAs first or co-first\n\n\n1/1\n\n\n\n\nSeptember,2019\n\n\nImplementation of C4.5 algorithm for critical land prediction in agricultural cultivation areas in pemali jratun watershed\n\n\nIndonesian Journal of Artificial Intelligence and\n\n\nAs first or co-first\n\n\n1/2\n\n\n\n\nApril,2019\n\n\nImplementasi algoritma naive bayes untuk klasifikasi lahan kritis pada kawasan budidaya pertanian\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n1/1\n\n\n\n\nApril,2019\n\n\nPemetaan kabupaten/kota di provinsi jawa tengah berdasarkan tingkat kemiskinan menggunakan algoritma k-harmonic means\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nFebruary,2018\n\n\nPenerapan algoritma self organizing maps untuk pemetaan penyandang kesejahteraan sosial (PMKS) di provinsi jawa tengah tahun 2016\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nFebruary,2018\n\n\nPerbandingan algoritma C4. 5, na√Øve bayes dan k-nearest neighbour untuk prediksi lahan kritis di kabupaten pemalang\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nFebruary,2018\n\n\nPenerapan partition entropy index, partition coefficient index dan xie BeniIndex untuk penentuan jumlah klaster optimal pada algoritma fuzzy c-means dalam pemetaan tingkat kesejahteraan penduduk jawa tengah\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nFebruary,2018\n\n\nPenentuan pusat awal klaster algoritma k-means untuk pemetaan tingkat kesejahteraan di provinsi jawa tengah\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n1/1\n\n\n\n\nFebruary,2017\n\n\nEstimasi parameter regresi logistik dengan metode bootstrap dan jackknife untuk sampel kecil\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nFebruary,2017\n\n\nPenerapan seleksi atribut berdasarkan koefisien variansi dan korelasi untuk inisialisasi pusat awal klaster pada algoritma k-means dalam pemetaan e-government tahun 2016\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nFebruary,2017\n\n\nPenerapan algoritma fuzzy c-means untuk pengelompokan kabupaten/kota di jawa tengah berdasarkan status kesejahteraan tahun 2015\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\nFebruary,2017\n\n\nImplementasi algoritma k-modes untuk penentuan prioritas rehabilitasi daerah aliran sungai berdasarkan parameter lahan kritis\n\n\nUniversity Research Colloquium\n\n\nAs first or co-first\n\n\n2/2\n\n\n\n\n\nNo matching items\n\n\n  \n\n Back to top"
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html",
    "href": "posts/2025-01-02-ggplot2/index.html",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "",
    "text": "ggplot2 adalah salah satu tools paling powerful di R yang bisa mengubah data mentahmu menjadi grafik-grafik memukau. Bayangkan, dengan beberapa baris kode, kamu bisa menciptakan visualisasi yang nggak cuma informatif, tapi juga Instagramable! üìä‚ú®\nArtwork by @allison_horst\nPada kesempatan kali ini, kita akan menjelajahi dunia seru visualisasi data menggunakan ggplot2 di R. Bukan cuma teori, kita akan langsung praktik dan eksplorasi cara-cara keren untuk mengubah data mentah menjadi visual yang memukau. Apa saja yang akan kita bahas! Berikut adalah cara menginstal dan memuat paket-paket R yang Anda sebutkan. Pastikan Anda sudah memiliki R dan RStudio terinstal di komputer Anda sebelum menjalankan kode di bawah ini."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#instal-paket",
    "href": "posts/2025-01-02-ggplot2/index.html#instal-paket",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n1 Instal Paket",
    "text": "1 Instal Paket\nJalankan perintah berikut di konsol R untuk menginstal paket-paket yang diperlukan:\ninstall.packages(\"tidyverse\")\ninstall.packages(\"here\")\ninstall.packages(\"janitor\")\ninstall.packages(\"patchwork\")\ninstall.packages(\"ggrepel\")\ninstall.packages(\"gghighlight\")\ninstall.packages(\"paletteer\")\ninstall.packages(\"ggExtra\")\ninstall.packages(\"ggbeeswarm\")"
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#muat-paket",
    "href": "posts/2025-01-02-ggplot2/index.html#muat-paket",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n2 Muat Paket",
    "text": "2 Muat Paket\nSetelah paket-paket tersebut terinstal, muat paket-paket tersebut ke dalam sesi R Anda dengan perintah berikut:\n\nlibrary(tidyverse)   # Untuk manipulasi data dan visualisasi dasar\nlibrary(here)        # Untuk manajemen direktori yang lebih mudah\nlibrary(janitor)     # Untuk membersihkan data\nlibrary(patchwork)   # Untuk menggabungkan beberapa grafik\nlibrary(ggrepel)     # Untuk label yang tidak saling tumpang tindih\nlibrary(gghighlight) # Untuk menyoroti elemen data tertentu\nlibrary(paletteer)   # Untuk skema warna yang menarik\nlibrary(ggExtra)     # Untuk menambahkan plot marginal\nlibrary(ggbeeswarm)  # Untuk membuat beeswarm plots\n\nggplot2 adalah library visualisasi data andalan di R yang dibangun berdasarkan prinsip Grammar of Graphics. Bayangkan ggplot2 seperti sebuah kotak peralatan seni: ia memberi kita semua alat yang dibutuhkan untuk mengubah data mentah menjadi visualisasi yang memukau. Tapi sebelum kita bisa membuat grafik yang keren, ada tiga hal dasar yang perlu dipahami.\nPertama, kita harus memulai dengan memanggil fungsi ggplot(). Ini seperti membentangkan kanvas kosong sebelum mulai melukis. Tanpa data atau elemen tambahan, ggplot() hanya akan menghasilkan ruang kosong, tapi ini adalah langkah penting untuk memulai.\nKedua, kita perlu menentukan data yang akan digunakan. Data ini biasanya dalam bentuk data frame atau tibble, seperti tabel yang berisi informasi yang ingin kita visualisasikan. Misalnya, jika kita punya data tentang kadal (lizards), kita bisa memberitahu ggplot2 untuk menggunakan data tersebut sebagai bahan baku grafik kita.\nTerakhir, kita harus memilih jenis grafik yang ingin dibuat. Apakah kita ingin menampilkan hubungan antara dua variabel dengan plot titik (geom_point()), menunjukkan distribusi data dengan histogram (geom_histogram()), atau memvisualisasikan tren dengan plot garis (geom_line())? Setiap jenis grafik punya keunikan dan kegunaannya sendiri.\nDengan menggabungkan ketiga elemen ini‚Äîggplot(), data, dan jenis grafik‚Äîkita bisa membuat visualisasi yang tidak hanya informatif, tapi juga menarik secara visual. Misalnya, dengan beberapa baris kode, kita bisa membuat plot titik yang menunjukkan hubungan antara panjang dan berat kadal, lengkap dengan warna yang membedakan spesiesnya."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#komponen-dasar-rahasia-di-balik-grafik-ggplot2",
    "href": "posts/2025-01-02-ggplot2/index.html#komponen-dasar-rahasia-di-balik-grafik-ggplot2",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n3 Komponen Dasar: Rahasia di Balik Grafik ggplot2",
    "text": "3 Komponen Dasar: Rahasia di Balik Grafik ggplot2\nSetiap grafik ggplot2 ibarat sebuah mahakarya yang dibangun dari beberapa komponen dasar. Memahami komponen-komponen ini adalah kunci untuk membuat visualisasi data yang memukau. Mari kita telusuri satu per satu!\nPertama, ada data. Ini adalah bahan baku utama grafik kita. Biasanya, data ini disajikan dalam bentuk data frame atau tibble, seperti tabel yang berisi informasi yang ingin kita visualisasikan. Tanpa data, grafik kita hanyalah kanvas kosong.\nKedua, kita punya aesthetics (estetika). Ini adalah properti visual yang menentukan bagaimana data akan ditampilkan. Misalnya, kita bisa menggunakan warna untuk membedakan kategori, ukuran untuk menunjukkan besaran, atau bentuk untuk menandai kelompok tertentu. Aesthetics adalah cara kita ‚Äúmenghidupkan‚Äù data.\nSelanjutnya, ada geoms (objek geometris). Geoms adalah elemen visual yang membentuk grafik, seperti titik pada plot titik (geom_point), garis pada plot garis (geom_line), atau batang pada plot batang (geom_bar). Setiap geom punya karakteristiknya sendiri dan cocok untuk jenis data tertentu.\nKomponen keempat adalah scales (skala). Scales bertugas memetakan data ke aesthetics. Misalnya, jika kita menggunakan warna untuk membedakan kategori, scales akan menentukan warna apa yang digunakan dan bagaimana warnanya diatur. Scales juga mengontrol sumbu x dan y, termasuk rentang nilai dan labelnya.\nTerakhir, ada facets (faset). Facets memungkinkan kita membagi data menjadi beberapa subplot berdasarkan kategori tertentu. Ini seperti membuat beberapa grafik kecil dalam satu gambar besar, yang memudahkan kita untuk membandingkan kelompok data secara bersamaan."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#membuat-plot-titik-sederhana-dengan-ggplot2",
    "href": "posts/2025-01-02-ggplot2/index.html#membuat-plot-titik-sederhana-dengan-ggplot2",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n4 Membuat Plot Titik Sederhana dengan ggplot2",
    "text": "4 Membuat Plot Titik Sederhana dengan ggplot2\nMari kita langsung praktik! Salah satu cara terbaik untuk memahami ggplot2 adalah dengan mencoba membuat grafik sederhana. Di sini, kita akan membuat plot titik (scatter plot) yang menampilkan hubungan antara dua variabel. Plot titik adalah salah satu grafik paling dasar, tapi sangat powerful untuk melihat pola atau tren dalam data.\nPertama, kita perlu memuat library ggplot2. Ini seperti membuka kotak peralatan seni sebelum mulai melukis. Caranya mudah, cukup jalankan perintah berikut:\n\nlibrary(ggplot2)\n\nSelanjutnya, kita perlu menyiapkan data. Untuk contoh ini, kita akan membuat data frame sederhana yang berisi 100 titik acak. Data frame ini memiliki dua kolom: x dan y, yang masing-masing berisi nilai acak dari distribusi normal.\n\ndata &lt;- data.frame(x = rnorm(100), y = rnorm(100))\n\nSetelah data siap, saatnya membuat plot! Kita menggunakan fungsi ggplot() untuk memulai. Di dalamnya, kita tentukan data yang akan digunakan (data) dan aesthetic mapping (aes()), yaitu bagaimana data akan dipetakan ke sumbu x dan y.\n\nggplot(data, aes(x = x, y = y))\n\n\n\n\n\n\n\nTapi, kita belum selesai! Kita perlu menambahkan geom untuk menentukan jenis grafik yang ingin dibuat. Untuk plot titik, kita menggunakan geom_point().\n\nggplot(data, aes(x = x, y = y)) +\n  geom_point()\n\n\n\n\n\n\n\nDan voil√†! Kita sudah berhasil membuat plot titik sederhana. Grafik ini menampilkan 100 titik acak yang tersebar di bidang dua dimensi. Meskipun sederhana, plot ini adalah dasar dari banyak visualisasi yang lebih kompleks."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#custom-plot-menambahkan-sentuhan-personal-pada-grafik",
    "href": "posts/2025-01-02-ggplot2/index.html#custom-plot-menambahkan-sentuhan-personal-pada-grafik",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n5 Custom Plot: Menambahkan Sentuhan Personal pada Grafik",
    "text": "5 Custom Plot: Menambahkan Sentuhan Personal pada Grafik\nSetelah menguasai dasar-dasar membuat plot dengan ggplot2, saatnya kita naik level! Salah satu keunggulan ggplot2 adalah kemampuannya untuk dikustomisasi sesuai kebutuhan. Dengan menambahkan lapisan-lapisan tambahan, kita bisa membuat grafik yang tidak hanya informatif, tapi juga menarik secara visual.\nMari kita lihat beberapa cara untuk mengkustomisasi plot:\n\nlabs(): Menambahkan Label\nFungsi labs() memungkinkan kita menambahkan judul, label sumbu, dan keterangan lainnya ke grafik. Ini seperti memberi ‚Äúkonteks‚Äù pada visualisasi kita, sehingga pembaca tahu apa yang sedang mereka lihat.\ntheme(): Mengubah Tampilan Keseluruhan\nDengan theme(), kita bisa mengubah tampilan grafik secara keseluruhan, seperti font, warna latar, atau posisi legenda. ggplot2 menyediakan beberapa tema bawaan, seperti theme_minimal() atau theme_classic(), yang bisa langsung digunakan untuk membuat grafik terlihat lebih profesional.\nscale_color_manual(): Mengatur Skala Warna\nJika kita ingin mengontrol warna secara manual, scale_color_manual() adalah alat yang tepat. Ini memungkinkan kita memilih warna spesifik untuk setiap kategori dalam data."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#plot-titik-dengan-sentuhan-kustom",
    "href": "posts/2025-01-02-ggplot2/index.html#plot-titik-dengan-sentuhan-kustom",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n6 Plot Titik dengan Sentuhan Kustom",
    "text": "6 Plot Titik dengan Sentuhan Kustom\nMari kita praktikkan kustomisasi ini pada plot titik sederhana yang sudah kita buat sebelumnya. Berikut adalah contoh kodenya:\n\n# Buat plot titik dengan label dan tema kustom\nggplot(data, aes(x = x, y = y)) +\n  geom_point() +\n  labs(title = \"Plot Titik\", \n       x = \"Sumbu X\", \n       y = \"Sumbu Y\", \n       caption = \"Sumber: Data Acak\") +  # Menambahkan judul, label, dan caption\n  theme_minimal() +  # Menggunakan tema minimalis\n  theme(plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"))  # Kustomisasi judul\n\n\n\n\n\n\n\nGrafik kita sekarang tidak hanya menampilkan data, tapi juga terlihat lebih profesional dan informatif. Dengan sentuhan kustomisasi, kita bisa membuat grafik yang siap dipresentasikan atau dibagikan kepada orang lain."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#faceting-membagi-data-menjadi-beberapa-plot-yang-menarik",
    "href": "posts/2025-01-02-ggplot2/index.html#faceting-membagi-data-menjadi-beberapa-plot-yang-menarik",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n7 Faceting: Membagi Data Menjadi Beberapa Plot yang Menarik",
    "text": "7 Faceting: Membagi Data Menjadi Beberapa Plot yang Menarik\nSalah satu fitur keren dari ggplot2 adalah faceting. Faceting memungkinkan kita membagi data menjadi beberapa subplot berdasarkan variabel kategorik. Ini seperti memiliki beberapa grafik kecil dalam satu gambar besar, yang memudahkan kita untuk membandingkan pola atau tren antar kelompok data.\nBayangkan Anda punya data tentang dua kelompok, misalnya kelompok A dan B. Daripada membuat dua grafik terpisah, Anda bisa menggunakan faceting untuk menampilkan kedua kelompok dalam satu grafik yang rapi dan terorganisir."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#faceting-dengan-facet_wrap",
    "href": "posts/2025-01-02-ggplot2/index.html#faceting-dengan-facet_wrap",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n8 Faceting dengan facet_wrap()\n",
    "text": "8 Faceting dengan facet_wrap()\n\nMari kita lihat contoh praktisnya. Pertama, kita buat data frame contoh yang berisi dua variabel numerik (x dan y) dan satu variabel kategorik (grup). Variabel grup ini akan digunakan untuk membagi data menjadi beberapa plot.\n\n# Buat data frame contoh dengan variabel kategorik\ndata &lt;- data.frame(\n  x = rnorm(100),  # Nilai acak untuk sumbu x\n  y = rnorm(100),  # Nilai acak untuk sumbu y\n  grup = sample(c(\"A\", \"B\"), 100, replace = TRUE)  # Variabel kategorik dengan dua kelompok\n)\n\nSetelah data siap, kita bisa membuat plot titik dan menggunakan facet_wrap() untuk membagi data berdasarkan variabel grup.\n\n# Buat plot titik dengan faceting\nggplot(data, aes(x = x, y = y)) +\n  geom_point() +  # Plot titik\n  facet_wrap(~ grup)  # Faceting berdasarkan variabel 'grup'\n\n\n\n\n\n\n\nGrafik kita sekarang terdiri dari dua plot kecil yang berdampingan. Setiap plot menampilkan data untuk satu grup, sehingga kita bisa dengan mudah membandingkan pola atau tren antara grup A dan grup B."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#read-data",
    "href": "posts/2025-01-02-ggplot2/index.html#read-data",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n9 Read Data",
    "text": "9 Read Data\nSebelum kita bisa membuat visualisasi data yang memukau, langkah pertama yang harus dilakukan adalah read data. Di sini, kita akan menggunakan dataset tentang kadal yang disimpan dalam file lizards.csv. Dataset ini berisi informasi seperti panjang, berat, spesies, dan habitat kadal.\nUntuk membaca data, kita akan menggunakan dua library readr, library ini menyediakan fungsi cepat dan efisien untuk membaca file CSV.\n\nlibrary(readr)  # Untuk membaca file CSV\n\nSetelah itu, kita bisa membaca file lizards.csv dengan perintah berikut:\n\nurlfile &lt;- \"https://raw.githubusercontent.com/dedenistiawan/Dataset/refs/heads/main/lizards.csv\"\nlizards &lt;- read.csv(url(urlfile))\n\nMembaca data adalah langkah krusial sebelum kita bisa melakukan analisis atau visualisasi. Dengan menggunakan readr, kita memastikan bahwa proses ini dilakukan dengan cara yang efisien dan rapi.\nSekarang, data lizards sudah siap digunakan! Selanjutnya, kita bisa mulai membuat visualisasi menarik dengan ggplot2."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#tiga-cara-untuk-membuat-grafik-dengan-ggplot2",
    "href": "posts/2025-01-02-ggplot2/index.html#tiga-cara-untuk-membuat-grafik-dengan-ggplot2",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n10 Tiga Cara untuk Membuat Grafik dengan ggplot2",
    "text": "10 Tiga Cara untuk Membuat Grafik dengan ggplot2\nggplot2 adalah library yang sangat fleksibel, dan salah satu keunggulannya adalah kita bisa membuat grafik dengan beberapa cara berbeda. Meskipun caranya berbeda, hasilnya tetap sama: grafik yang informatif dan menarik.\n\n10.1 Cara 1: Semuanya dalam Satu Langkah\nDi cara pertama, kita menentukan data dan aesthetics (aes) langsung dalam fungsi ggplot(), lalu menambahkan geom (dalam hal ini, geom_point()). Ini adalah cara yang paling umum dan sering digunakan, terutama untuk grafik sederhana.\n\n# Cara 1: Data dan aesthetics langsung di ggplot()\nlibrary(ggplot2)\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_point()\n\n\n\n\n\n\n\n\n10.2 Cara 2: Pisahkan Data dan Aesthetics\nDi cara kedua, kita memisahkan penentuan data dan aesthetics dari fungsi ggplot(). Ini berguna jika kita ingin menggunakan data atau aesthetics yang sama untuk beberapa grafik.\n\n# Cara 2: Pisahkan data dan aesthetics\nplot_base &lt;- ggplot(data = lizards, aes(x = total_length, y = weight))\nplot_base + geom_point()\n\n\n\n\n\n\n\n\n10.3 Cara 3: Gunakan Pipa (%&gt;%)\nDi cara ketiga, kita menggunakan operator pipa (%&gt;%) dari paket magrittr atau dplyr untuk membuat alur kode yang lebih lancar. Ini sangat berguna jika kita sudah terbiasa dengan gaya pemrograman fungsional.\n\n# Cara 3: Gunakan pipa\nlibrary(dplyr)  # Pastikan dplyr sudah dimuat\nlizards %&gt;%\n  ggplot(aes(x = total_length, y = weight)) +\n  geom_point()"
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#mengubah-jenis-grafik-dengan-mudah-cukup-ganti-geom-nya",
    "href": "posts/2025-01-02-ggplot2/index.html#mengubah-jenis-grafik-dengan-mudah-cukup-ganti-geom-nya",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n11 Mengubah Jenis Grafik dengan Mudah: Cukup Ganti Geom-nya!",
    "text": "11 Mengubah Jenis Grafik dengan Mudah: Cukup Ganti Geom-nya!\nSalah satu keunggulan besar ggplot2 adalah kemudahannya dalam mengubah jenis grafik. Dengan struktur berbasis layer, kita hanya perlu mengganti fungsi geom_ yang digunakan, tanpa perlu mengubah keseluruhan kode. Ini membuat eksplorasi data menjadi lebih cepat dan fleksibel.\n\n11.1 Contoh: Dari Plot Titik ke Plot Garis\nMisalnya, kita sudah membuat plot titik (scatter plot) dengan kode berikut:\n\n# Plot titik\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_point()\n\n\n\n\n\n\n\nHasilnya adalah grafik yang menampilkan hubungan antara panjang total (total_length) dan berat (weight) kadal dalam bentuk titik-titik.\n\n11.2 Mengubah ke Plot Garis\nJika kita ingin mengubahnya menjadi plot garis (line plot), kita hanya perlu mengganti geom_point() dengan geom_line().\n\n# Plot garis\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_line()\n\n\n\n\n\n\n\n\n11.3 Contoh Lain: Mengubah ke Plot Batang\nKita juga bisa mengubahnya menjadi plot batang (bar plot) dengan menggunakan geom_bar(). Namun, untuk plot batang, kita biasanya hanya memerlukan satu sumbu (biasanya sumbu x).\n\n# Plot batang (contoh sederhana)\nggplot(data = lizards, aes(x = total_length)) +\n  geom_histogram()\n\n\n\n\n\n\n\n\n11.4 Menggabungkan Beberapa Geom\nKita bahkan bisa menggabungkan beberapa geom dalam satu grafik. Misalnya, menampilkan titik dan garis sekaligus:\n\n# Gabungkan plot titik dan garis\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_point() +  # Tambahkan titik\n  geom_line()     # Tambahkan garis"
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#memilih-grafik-berdasarkan-jenis-data",
    "href": "posts/2025-01-02-ggplot2/index.html#memilih-grafik-berdasarkan-jenis-data",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n12 Memilih Grafik Berdasarkan Jenis Data",
    "text": "12 Memilih Grafik Berdasarkan Jenis Data\nSalah satu kunci sukses dalam visualisasi data adalah memilih jenis grafik yang sesuai dengan jenis data yang kita miliki. Setiap jenis data memiliki karakteristiknya sendiri, dan memilih grafik yang tepat akan membantu kita menyampaikan informasi dengan lebih efektif. Mari kita bahas beberapa contoh berdasarkan jenis data yang umum:\n\n12.1 Data Kategorik dan Kontinu: Jitterplot\nJika kita memiliki data dengan satu variabel kategorik (misalnya, nama spesies) dan satu variabel kontinu (misalnya, panjang total), jitterplot adalah pilihan yang bagus. Jitterplot menampilkan titik-titik data dengan sedikit ‚Äúgetaran‚Äù (jitter) secara horizontal atau vertikal untuk menghindari tumpang tindih.\n\n# Jitterplot untuk data kategorik dan kontinu\nggplot(data = lizards, aes(y = common_name, x = total_length)) +\n  geom_jitter()\n\n\n\n\n\n\n\nKita bisa melihat distribusi panjang total (total_length) untuk setiap spesies kadal (common_name) dengan jelas, tanpa titik-titik yang saling menutupi.\n\n12.2 Data Kontinu dan Kontinu: Scatterplot\nJika kita memiliki dua variabel kontinu, scatterplot (plot titik) adalah pilihan yang tepat. Ini membantu kita melihat hubungan atau korelasi antara dua variabel.\n\n# Scatterplot untuk dua variabel kontinu\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_point()\n\n\n\n\n\n\n\n\n12.3 Data Kategorik dan Frekuensi: Barplot\nJika kita memiliki data kategorik dan ingin menampilkan frekuensi atau jumlah observasi, barplot (plot batang) adalah pilihan yang ideal.\n\n# Barplot untuk data kategorik\nggplot(data = lizards, aes(y = common_name)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n12.4 Data Kontinu dan Distribusi: Histogram\nJika kita ingin melihat distribusi dari satu variabel kontinu, histogram adalah pilihan yang tepat.\n\n# Histogram untuk data kontinu\nggplot(data = lizards, aes(x = total_length)) +\n  geom_histogram(binwidth = 5)"
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#aesthetic-mapping",
    "href": "posts/2025-01-02-ggplot2/index.html#aesthetic-mapping",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n13 Aesthetic Mapping",
    "text": "13 Aesthetic Mapping\nSalah satu keunggulan ggplot2 adalah kemampuannya untuk mengubah tampilan grafik dengan mudah melalui aesthetic mapping. Namun, tidak semua perubahan estetika memerlukan aes(). Jika kita ingin mengubah estetika berdasarkan konstanta (misalnya, ‚ÄúBuat semua titik berwarna biru‚Äù), kita bisa langsung menambahkan informasi tersebut ke dalam geom_ yang relevan. Ketika kita ingin mengubah estetika grafik berdasarkan nilai tetap (konstanta), kita bisa langsung menambahkan parameter ke dalam geom_. Berikut adalah beberapa parameter yang sering digunakan:\n\n\nfill: Mengubah warna isi (misalnya, isi kolom, densitas, atau kotak plot).\n\n\ncolor: Mengubah warna titik atau garis batas.\n\n\nshape: Mengubah gaya titik (misalnya, lingkaran, segitiga, atau kotak).\n\n\nalpha: Mengubah transparansi (0 = transparan, 1 = tidak transparan).\n\n\nsize: Mengubah ukuran titik atau lebar garis.\n\n\nlinetype: Mengubah jenis garis (misalnya, ‚Äútitik-titik‚Äù, ‚Äúgaris putus-putus‚Äù, atau ‚Äútitik-garis‚Äù).\n\n\n13.1 Membuat Grafik yang Menarik atau Mengerikan?\nBerikut adalah contoh penggunaan parameter estetika berdasarkan konstanta untuk membuat grafik histogram yang unik (atau mungkin agak ‚Äúmengerikan‚Äù):\n\n# Histogram dengan estetika berdasarkan konstanta\nggplot(data = lizards, aes(x = weight)) +\n  geom_histogram(color = \"orange\",  # Warna garis batas\n                 fill = \"purple\",   # Warna isi\n                 size = 2,          # Lebar garis batas\n                 linetype = \"dotted\")  # Jenis garis batas\n\n\n\n\n\n\n\n\n\ncolor = \"orange\":\nGaris batas histogram diubah menjadi warna oranye.\n\n\nfill = \"purple\":\nIsi histogram diubah menjadi warna ungu.\n\n\nsize = 2:\nLebar garis batas histogram diperbesar.\n\n\nlinetype = \"dotted\":\nGaris batas histogram diubah menjadi garis putus-putus.\n\nKita mendapatkan histogram dengan warna dan gaya yang sangat mencolok. Meskipun mungkin tidak cocok untuk presentasi formal, ini adalah contoh yang bagus untuk menunjukkan fleksibilitas ggplot2 dalam mengubah estetika grafik.\n\n13.2 Plot Titik Sederhana dengan Warna dan Ukuran Tetap\n\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_point(color = \"blue\", size = 2, shape = 16)\n\n\n\n\n\n\n\n\n\ncolor = \"blue\":\nSemua titik pada grafik diwarnai biru.\n\n\nsize = 2:\nUkuran titik diperbesar menjadi 2 (default biasanya 1).\n\n\nshape = 16:\nBentuk titik diubah menjadi lingkaran padat (shape 16 adalah lingkaran tanpa isian).\n\nKita mendapatkan plot titik dengan semua titik berwarna biru, ukuran yang sedikit lebih besar, dan bentuk lingkaran padat. Ini adalah contoh sederhana untuk membuat grafik yang bersih dan mudah dibaca.\n### Plot Titik dengan Warna, Isi, Bentuk, dan Transparansi yang Unik\n\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_point(color = \"cyan4\", \n             fill = \"yellow\",\n             shape = 22, \n             size = 3, \n             alpha = 0.4)\n\n\n\n\n\n\n\n\n\ncolor = \"cyan4\":\nGaris batas titik diwarnai dengan warna cyan gelap.\n\n\nfill = \"yellow\":\nIsi titik diwarnai kuning.\n\n\nshape = 22:\nBentuk titik diubah menjadi kotak dengan isian (shape 22 adalah kotak yang bisa diisi warna).\n\n\nsize = 3:\nUkuran titik diperbesar menjadi 3.\n\n\nalpha = 0.4:\nTransparansi titik diatur menjadi 0.4 (40% opak), sehingga titik-titik terlihat transparan.\n\nKita mendapatkan plot titik dengan titik-titik berbentuk kotak, garis batas cyan gelap, isi kuning, dan transparan. Ini adalah contoh kreatif untuk membuat grafik yang menarik secara visual, meskipun mungkin tidak cocok untuk semua situasi."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#mengupdate-estetika-berdasarkan-variabel",
    "href": "posts/2025-01-02-ggplot2/index.html#mengupdate-estetika-berdasarkan-variabel",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n14 Mengupdate Estetika Berdasarkan Variabel",
    "text": "14 Mengupdate Estetika Berdasarkan Variabel\nSalah satu fitur paling powerful dari ggplot2 adalah kemampuan untuk memetakan variabel ke estetika grafik. Ini berarti kita bisa menggunakan data kita sendiri untuk mengontrol warna, ukuran, bentuk, atau elemen visual lainnya. Misalnya, kita bisa membuat titik-titik pada grafik berwarna berbeda berdasarkan kategori, atau mengubah ukuran titik berdasarkan nilai numerik.\n\n14.1 Plot Titik dengan Warna dan Ukuran Berdasarkan Variabel\nBerikut adalah contoh kode untuk membuat plot titik di mana warna dan ukuran titik ditentukan oleh variabel dalam data:\n\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_point(aes(color = common_name, size = total_length))\n\n\n\n\n\n\n\n\n\naes(color = common_name):\n\nWarna titik ditentukan oleh variabel common_name (nama spesies kadal).\n\nSetiap spesies akan memiliki warna yang berbeda.\n\n\n\naes(size = total_length):\n\nUkuran titik ditentukan oleh variabel total_length (panjang total kadal).\n\nKadal dengan panjang total lebih besar akan ditampilkan sebagai titik yang lebih besar.\n\n\n\nKita mendapatkan plot titik yang:\n- Menampilkan hubungan antara panjang total (total_length) dan berat (weight) kadal.\n- Warna titik berbeda-beda berdasarkan spesies (common_name).\n- Ukuran titik bervariasi berdasarkan panjang total (total_length)."
  },
  {
    "objectID": "posts/2025-01-02-ggplot2/index.html#menggunakan-kombinasi-estetika",
    "href": "posts/2025-01-02-ggplot2/index.html#menggunakan-kombinasi-estetika",
    "title": "ggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau",
    "section": "\n15 Menggunakan Kombinasi Estetika",
    "text": "15 Menggunakan Kombinasi Estetika\nSalah satu keunggulan ggplot2 adalah kemampuannya untuk menggabungkan estetika berbasis variabel (menggunakan aes()) dan estetika berbasis konstanta (tanpa aes()). Ini memungkinkan kita membuat grafik yang lebih kaya dan informatif, sambil tetap menjaga tampilan yang konsisten.\n\n15.1 Warna Berdasarkan Variabel, Transparansi Tetap\nBerikut adalah contoh kode di mana warna titik ditentukan oleh variabel (common_name), tetapi transparansi diatur secara konstan untuk semua titik:\n\nggplot(data = lizards, aes(x = total_length, y = weight)) +\n  geom_point(aes(color = common_name), alpha = 0.3)\n\n\n\n\n\n\n\n\n\naes(color = common_name):\n\nWarna titik ditentukan oleh variabel common_name (nama spesies kadal).\n\nSetiap spesies akan memiliki warna yang berbeda.\n\n\n\nalpha = 0.3:\n\nTransparansi titik diatur secara konstan menjadi 0.3 (30% opak) untuk semua titik.\n\nIni membuat titik-titik terlihat transparan, sehingga tumpang tindih antar titik lebih mudah dilihat.\n\n\n\nKita mendapatkan plot titik yang:\n- Menampilkan hubungan antara panjang total (total_length) dan berat (weight) kadal.\n- Warna titik berbeda-beda berdasarkan spesies (common_name).\n- Semua titik memiliki transparansi yang sama, sehingga grafik terlihat lebih rapi dan informatif."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Deden Istiawan",
    "section": "",
    "text": "Sponsor\nCurrently, I work as a lecturer and data scientist. As an educator, I have a passion for sharing knowledge and inspiring students in understanding the world of data and technology. On the other hand, as a data analyst, I am actively involved in various data analysis projects that aim to transform raw data into valuable insights that can be implemented in strategic decision making. I also enjoy watching movies. Have a look at my complete  curriculum vitae."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Deden Istiawan",
    "section": "Education",
    "text": "Education\n\nM.Kom. in Informatics Engineering, 2017\nUniversitas Dian Nuswantoro\nS.Si. in Statistics, 2013\nInstitut Sains dan Teknologi AKPRIND"
  },
  {
    "objectID": "index.html#interests",
    "href": "index.html#interests",
    "title": "Deden Istiawan",
    "section": "Interests",
    "text": "Interests\n\nWatching Movies\nR markdown\nBookdown\nQuarto\nData Analysis\nData Visualisation\nKnowledge Sharing\nLearning New Skills"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Animasi Grafik dengan gganimate\n\n\n\n\n\n\ngganimate\n\n\nggplot2\n\n\nDataViz\n\n\nGapminder\n\n\n\nPada tutorial ini saya akan menjelaskan step by step membuat animasi di R menggunakan packages gganimate. gganimate adalah ekstensi dari packages gglplot2 untuk membuat animasi. Untuk membuat animasi grafik dibutuhkan beberapa packages diantaranaya gapminder, ggplot2, dan gganimate. \n\n\n\n\n\nThursday, the 2nd of January, 2025\n\n\nDeden Istiawan, M.Kom.\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2: Senjata Ampuh untuk Visualisasi Data yang Memukau\n\n\n\n\n\n\nggplot2\n\n\nDataViz\n\n\nChart\n\n\n\nPernah nggak sih kamu merasa data itu membosankan? Deretan angka, tabel, dan statistik yang bikin pusing tujuh keliling. Tapi, apa jadinya kalau data itu bisa ‚Äúberbicara‚Äù melalui visualisasi yang keren dan mudah dipahami? Nah, di sinilah ggplot2 datang sebagai superhero! ü¶∏‚Äç‚ôÇÔ∏èü¶∏‚Äç‚ôÄÔ∏è \n\n\n\n\n\nMonday, the 2nd of September, 2024\n\n\nDeden Istiawan, M.Kom.\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html",
    "href": "posts/2025-01-02-gganimate/index.html",
    "title": "Animasi Grafik dengan gganimate",
    "section": "",
    "text": "Dalam dunia visualisasi data, grafik statis memang sudah cukup untuk menyampaikan informasi. Tapi, pernahkah kamu berpikir untuk membuat grafik yang lebih dinamis dan menarik? Nah, di sinilah gganimate berperan, Paket ini memungkinkan kita menghidupkan grafik berbasis ggplot2 dalam bahasa R, sehingga analisis data jadi lebih interaktif dan mudah dipahami.\ngganimate adalah ekstensi dari ggplot2 yang memungkinkan kita membuat animasi dengan menambahkan elemen waktu ke dalam visualisasi. Ini sangat berguna untuk menunjukkan tren, perubahan, atau pola dalam data yang berkembang seiring waktu."
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html#instalasi-dan-persiapan",
    "href": "posts/2025-01-02-gganimate/index.html#instalasi-dan-persiapan",
    "title": "Animasi Grafik dengan gganimate",
    "section": "\n1 Instalasi dan Persiapan",
    "text": "1 Instalasi dan Persiapan\n\nlibrary(gapminder)\nlibrary(ggplot2)\nlibrary(gganimate)\n\nTahap selanjutnya adalah import data dari gapminder di dalam dataset ini terdapat 1704 observasi dan 6 variabel. Variabel dalam dataset ini adalah:\n\nCountry adalah Nama Negara\nContinent adalah Nama Benua\nYear adalah Tahun dari setiap data\nLifeExp adalah Angka harapan Hidup\nPop adalah Populasi setiap negara per tahun\ngdpPercap adalah GDP per kapita setiap negara per tahun"
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html#import-data",
    "href": "posts/2025-01-02-gganimate/index.html#import-data",
    "title": "Animasi Grafik dengan gganimate",
    "section": "\n2 Import Data",
    "text": "2 Import Data\nPada bagian ini, kita akan menggunakan dataset gapminder, yang sudah tersedia di dalam paket gapminder. Berikut adalah langkah-langkahnya:\n\nlibrary(gapminder)\ndata=gapminder\ndata\n#&gt; # A tibble: 1,704 √ó 6\n#&gt;    country     continent  year lifeExp      pop gdpPercap\n#&gt;    &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n#&gt;  1 Afghanistan Asia       1952    28.8  8425333      779.\n#&gt;  2 Afghanistan Asia       1957    30.3  9240934      821.\n#&gt;  3 Afghanistan Asia       1962    32.0 10267083      853.\n#&gt;  4 Afghanistan Asia       1967    34.0 11537966      836.\n#&gt;  5 Afghanistan Asia       1972    36.1 13079460      740.\n#&gt;  6 Afghanistan Asia       1977    38.4 14880372      786.\n#&gt;  7 Afghanistan Asia       1982    39.9 12881816      978.\n#&gt;  8 Afghanistan Asia       1987    40.8 13867957      852.\n#&gt;  9 Afghanistan Asia       1992    41.7 16317921      649.\n#&gt; 10 Afghanistan Asia       1997    41.8 22227415      635.\n#&gt; # ‚Ñπ 1,694 more rows\n\nDari tabel di atas, kita bisa melihat bahwa harapan hidup, populasi, dan PDB per kapita berubah seiring waktu. Nantinya, data ini bisa kita gunakan untuk membuat animasi dengan gganimate guna melihat bagaimana setiap negara berkembang dari waktu ke waktu."
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html#membuat-plot-dasar-statis",
    "href": "posts/2025-01-02-gganimate/index.html#membuat-plot-dasar-statis",
    "title": "Animasi Grafik dengan gganimate",
    "section": "\n3 Membuat Plot Dasar Statis",
    "text": "3 Membuat Plot Dasar Statis\nSebelum kita membuat animasi dengan gganimate, langkah pertama adalah membuat plot statis menggunakan ggplot2. Plot ini akan menjadi dasar animasi yang akan kita buat nanti.\n\nlibrary(gapminder)\nlibrary(ggplot2)\ngapminder_plot &lt;- ggplot(\n  gapminder, \n  aes(x = gdpPercap, y=lifeExp, size = pop, colour = continent, size = pop, frame = year)\n  ) +\n  geom_point(alpha = 0.6) +\n  scale_color_viridis_d() +\n  scale_x_log10() +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\")\ngapminder_plot\n\n\n\n\n\n\n\nPlot ini masih bersifat statis. Untuk menambahkan animasi, kita nantinya akan memanfaatkan gganimate dengan menambahkan dimensi waktu berdasarkan variabel year."
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html#menambahkan-transisi",
    "href": "posts/2025-01-02-gganimate/index.html#menambahkan-transisi",
    "title": "Animasi Grafik dengan gganimate",
    "section": "\n4 Menambahkan Transisi",
    "text": "4 Menambahkan Transisi\nSetelah membuat plot statis, langkah berikutnya adalah menambahkan transisi agar grafik menjadi animasi. Kita akan menggunakan fungsi transition_time() dari paket gganimate untuk mengubah visualisasi berdasarkan dimensi waktu (year). Animasi yang dihasilkan akan menunjukkan bagaimana GDP per kapita, harapan hidup, dan populasi berubah dari tahun ke tahun di berbagai negara.\n\ngapminder_plot + transition_time(year) +\n  labs(title = \"Year: {frame_time}\")"
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html#membuat-plot-tiap-benua",
    "href": "posts/2025-01-02-gganimate/index.html#membuat-plot-tiap-benua",
    "title": "Animasi Grafik dengan gganimate",
    "section": "\n5 Membuat Plot Tiap Benua",
    "text": "5 Membuat Plot Tiap Benua\nSetelah menambahkan animasi dasar, kita bisa memperjelas visualisasi dengan memisahkan tiap benua ke dalam subplot terpisah menggunakan fungsi facet_wrap(). Ini akan membantu kita melihat perkembangan masing-masing benua secara lebih detail. Animasi ini akan menampilkan lima subplot (Asia, Eropa, Afrika, Amerika, dan Oseania) yang masing-masing menunjukkan perkembangan GDP per kapita dan harapan hidup dari tahun ke tahun.\n\nlibrary(gganimate)\ngapminder_plot + facet_wrap(~continent) +\n  transition_time(year) +\n  labs(title = \"Year: {frame_time}\")"
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html#membuat-plot-dinamis",
    "href": "posts/2025-01-02-gganimate/index.html#membuat-plot-dinamis",
    "title": "Animasi Grafik dengan gganimate",
    "section": "\n6 Membuat Plot Dinamis",
    "text": "6 Membuat Plot Dinamis\nUntuk membuat animasi yang lebih menarik, kita bisa menggunakan view_follow() agar tampilan grafik mengikuti pergerakan data secara dinamis. Dengan fixed_y = TRUE, sumbu Y akan tetap, sedangkan sumbu X bisa bergerak mengikuti perubahan data. Dengan view_follow(), tampilan grafik akan lebih interaktif, terutama jika terdapat perubahan signifikan dalam GDP per kapita dari waktu ke waktu.\n\nlibrary(gganimate)\ngapminder_plot + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  view_follow(fixed_y = TRUE)"
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html#membuat-bayangan-animasi",
    "href": "posts/2025-01-02-gganimate/index.html#membuat-bayangan-animasi",
    "title": "Animasi Grafik dengan gganimate",
    "section": "\n7 Membuat Bayangan Animasi",
    "text": "7 Membuat Bayangan Animasi\nAgar animasi lebih menarik dan mudah diikuti, kita bisa menambahkan efek bayangan gerak menggunakan fungsi shadow_wake() dari gganimate. Dengan efek ini, titik-titik akan meninggalkan jejak samar yang menunjukkan lintasan pergerakannya. Animasi akan menampilkan titik-titik yang bergerak dari tahun ke tahun dengan efek bayangan yang menunjukkan lintasan pergerakan setiap negara. Ini sangat berguna untuk menunjukkan tren perubahan secara lebih jelas.\n\nlibrary(gganimate)\ngapminder_plot + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  shadow_wake(wake_length = 0.1, alpha = FALSE)"
  },
  {
    "objectID": "posts/2025-01-02-gganimate/index.html#menampilkan-jejak-data",
    "href": "posts/2025-01-02-gganimate/index.html#menampilkan-jejak-data",
    "title": "Animasi Grafik dengan gganimate",
    "section": "\n8 Menampilkan Jejak Data",
    "text": "8 Menampilkan Jejak Data\nUntuk melihat lintasan pergerakan setiap negara dalam animasi, kita bisa menggunakan shadow_mark() dari gganimate. Fungsi ini akan mempertahankan titik-titik sebelumnya sebagai jejak data, sehingga kita bisa melihat bagaimana suatu negara berkembang dari tahun ke tahun. Animasi ini akan menampilkan pergerakan setiap negara dari tahun ke tahun dengan jejak yang tetap terlihat. Ini memudahkan kita untuk memahami tren perubahan GDP per kapita dan harapan hidup dari waktu ke waktu.\n\nlibrary(gganimate)\ngapminder_plot + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  shadow_mark(alpha = 0.3, size = 0.5)\n\n\n\n\n\n\n\nDengan menggunakan gganimate, kita bisa mengubah grafik statis menjadi animasi yang lebih interaktif dan informatif. Dalam eksplorasi ini, kita telah:\n‚úÖ Membuat visualisasi dasar dengan ggplot2\n‚úÖ Menambahkan animasi waktu menggunakan transition_time()\n‚úÖ Membuat subplot per benua dengan facet_wrap()\n‚úÖ Menampilkan pergerakan dinamis dengan view_follow()\n‚úÖ Menambahkan efek bayangan menggunakan shadow_wake()\n‚úÖ Menampilkan jejak perubahan data dengan shadow_mark()\nHasilnya? Tren perkembangan GDP per kapita, harapan hidup, dan populasi dari waktu ke waktu bisa lebih mudah dipahami! üé¨üìä\nDengan sedikit kreativitas, kita bisa membuat animasi yang lebih menarik dan eksploratif untuk berbagai jenis data. gganimate bukan hanya alat visualisasi, tetapi juga bisa menjadi media storytelling yang powerful dalam data science! üöÄ. üî•Tertarik mencoba animasi lain? Eksplorasi lebih lanjut dengan gganimate dan buat visualisasi yang semakin keren! üòÉ"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Buku Analisis Cluster\n\n\nBookdown\n\nRmarkdown\n\nRStudio\n\nR\n\nLaTex\n\nHTML\n\n\n\nBuku ini membahas teori dan impelentasi algoritma clustering dengan R\n\n\n\n\nWednesday, the 19th of February, 2025\n\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "talks/2020-04-15-blas/index.html",
    "href": "talks/2020-04-15-blas/index.html",
    "title": "Transformasi Data Menjadi Visual yang Bermakna",
    "section": "",
    "text": "Slides: https://shorturl.at/1lnZm.\n\n\n\n\n Back to top"
  }
]