{
  "hash": "38f74efe82a60062ffda0ee608c636e7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Animasi Grafik dengan gganimate\"\ndescription: |\n  Pada tutorial ini saya akan menjelaskan step by step membuat animasi di R menggunakan packages\n  gganimate. gganimate adalah ekstensi dari packages gglplot2 untuk membuat animasi. Untuk membuat \n  animasi grafik dibutuhkan beberapa packages diantaranaya gapminder, ggplot2, dan gganimate.\ndate: \"2025-01-02\"\ncategories: [gganimate, ggplot2, DataViz, Gapminder]\nimage: featured.gif\nimage-alt: |\n  ggnamimated dengan data dari gapminder.\ntoc-depth: 5\neditor: \n  markdown: \n    wrap: sentence\n---\n\n\n\nDalam dunia visualisasi data, grafik statis memang sudah cukup untuk menyampaikan informasi.\nTapi, pernahkah kamu berpikir untuk membuat grafik yang lebih dinamis dan menarik?\nNah, di sinilah gganimate berperan, Paket ini memungkinkan kita menghidupkan grafik berbasis `ggplot2` dalam bahasa R, sehingga analisis data jadi lebih interaktif dan mudah dipahami.\n\n![](featured.gif){fig-alt=\"gganimate pada gapminder.\" fig-align=\"center\" width=\"50%\"}\n\n`gganimate` adalah ekstensi dari `ggplot2` yang memungkinkan kita membuat animasi dengan menambahkan elemen waktu ke dalam visualisasi.\nIni sangat berguna untuk menunjukkan tren, perubahan, atau pola dalam data yang berkembang seiring waktu.\n\n## Instalasi dan Persiapan\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gapminder)\nlibrary(ggplot2)\nlibrary(gganimate)\n```\n:::\n\n\n\nTahap selanjutnya adalah import data dari gapminder di dalam dataset ini terdapat 1704 observasi dan 6 variabel.\nVariabel dalam dataset ini adalah:\n\n-   Country adalah Nama Negara\n\n-   Continent adalah Nama Benua\n\n-   Year adalah Tahun dari setiap data\n\n-   LifeExp adalah Angka harapan Hidup\n\n-   Pop adalah Populasi setiap negara per tahun\n\n-   gdpPercap adalah GDP per kapita setiap negara per tahun\n\n## Import Data\n\nPada bagian ini, kita akan menggunakan dataset gapminder, yang sudah tersedia di dalam paket gapminder.\nBerikut adalah langkah-langkahnya:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gapminder)\ndata=gapminder\ndata\n#> # A tibble: 1,704 Ã— 6\n#>    country     continent  year lifeExp      pop gdpPercap\n#>    <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n#>  1 Afghanistan Asia       1952    28.8  8425333      779.\n#>  2 Afghanistan Asia       1957    30.3  9240934      821.\n#>  3 Afghanistan Asia       1962    32.0 10267083      853.\n#>  4 Afghanistan Asia       1967    34.0 11537966      836.\n#>  5 Afghanistan Asia       1972    36.1 13079460      740.\n#>  6 Afghanistan Asia       1977    38.4 14880372      786.\n#>  7 Afghanistan Asia       1982    39.9 12881816      978.\n#>  8 Afghanistan Asia       1987    40.8 13867957      852.\n#>  9 Afghanistan Asia       1992    41.7 16317921      649.\n#> 10 Afghanistan Asia       1997    41.8 22227415      635.\n#> # â„¹ 1,694 more rows\n```\n:::\n\n\n\nDari tabel di atas, kita bisa melihat bahwa harapan hidup, populasi, dan PDB per kapita berubah seiring waktu.\nNantinya, data ini bisa kita gunakan untuk membuat animasi dengan gganimate guna melihat bagaimana setiap negara berkembang dari waktu ke waktu.\n\n## Membuat Plot Dasar Statis\n\nSebelum kita membuat animasi dengan gganimate, langkah pertama adalah membuat plot statis menggunakan `ggplot2`.\nPlot ini akan menjadi dasar animasi yang akan kita buat nanti.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gapminder)\nlibrary(ggplot2)\ngapminder_plot <- ggplot(\n  gapminder, \n  aes(x = gdpPercap, y=lifeExp, size = pop, colour = continent, size = pop, frame = year)\n  ) +\n  geom_point(alpha = 0.6) +\n  scale_color_viridis_d() +\n  scale_x_log10() +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\")\ngapminder_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nPlot ini masih bersifat statis.\nUntuk menambahkan animasi, kita nantinya akan memanfaatkan gganimate dengan menambahkan dimensi waktu berdasarkan variabel year.\n\n## Menambahkan Transisi\n\nSetelah membuat plot statis, langkah berikutnya adalah menambahkan transisi agar grafik menjadi animasi.\nKita akan menggunakan fungsi `transition_time()` dari paket `gganimate` untuk mengubah visualisasi berdasarkan dimensi waktu (year).\nAnimasi yang dihasilkan akan menunjukkan bagaimana GDP per kapita, harapan hidup, dan populasi berubah dari tahun ke tahun di berbagai negara.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder_plot + transition_time(year) +\n  labs(title = \"Year: {frame_time}\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.gif)\n:::\n:::\n\n\n\n## Membuat Plot Tiap Benua\n\nSetelah menambahkan animasi dasar, kita bisa memperjelas visualisasi dengan memisahkan tiap benua ke dalam subplot terpisah menggunakan fungsi `facet_wrap()`.\nIni akan membantu kita melihat perkembangan masing-masing benua secara lebih detail.\nAnimasi ini akan menampilkan lima subplot (Asia, Eropa, Afrika, Amerika, dan Oseania) yang masing-masing menunjukkan perkembangan GDP per kapita dan harapan hidup dari tahun ke tahun.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\ngapminder_plot + facet_wrap(~continent) +\n  transition_time(year) +\n  labs(title = \"Year: {frame_time}\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.gif)\n:::\n:::\n\n\n\n## Membuat Plot Dinamis\n\nUntuk membuat animasi yang lebih menarik, kita bisa menggunakan `view_follow()` agar tampilan grafik mengikuti pergerakan data secara dinamis.\nDengan `fixed_y = TRUE`, sumbu Y akan tetap, sedangkan sumbu X bisa bergerak mengikuti perubahan data.\nDengan `view_follow()`, tampilan grafik akan lebih interaktif, terutama jika terdapat perubahan signifikan dalam GDP per kapita dari waktu ke waktu.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\ngapminder_plot + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  view_follow(fixed_y = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.gif)\n:::\n:::\n\n\n\n## Membuat Bayangan Animasi\n\nAgar animasi lebih menarik dan mudah diikuti, kita bisa menambahkan efek bayangan gerak menggunakan fungsi `shadow_wake()` dari gganimate.\nDengan efek ini, titik-titik akan meninggalkan jejak samar yang menunjukkan lintasan pergerakannya.\nAnimasi akan menampilkan titik-titik yang bergerak dari tahun ke tahun dengan efek bayangan yang menunjukkan lintasan pergerakan setiap negara.\nIni sangat berguna untuk menunjukkan tren perubahan secara lebih jelas.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\ngapminder_plot + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  shadow_wake(wake_length = 0.1, alpha = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.gif)\n:::\n:::\n\n\n\n## Menampilkan Jejak Data\n\nUntuk melihat lintasan pergerakan setiap negara dalam animasi, kita bisa menggunakan `shadow_mark()` dari gganimate.\nFungsi ini akan mempertahankan titik-titik sebelumnya sebagai jejak data, sehingga kita bisa melihat bagaimana suatu negara berkembang dari tahun ke tahun.\nAnimasi ini akan menampilkan pergerakan setiap negara dari tahun ke tahun dengan jejak yang tetap terlihat.\nIni memudahkan kita untuk memahami tren perubahan GDP per kapita dan harapan hidup dari waktu ke waktu.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\ngapminder_plot + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  shadow_mark(alpha = 0.3, size = 0.5)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.gif)\n:::\n:::\n\n\n\nDengan menggunakan gganimate, kita bisa mengubah grafik statis menjadi animasi yang lebih interaktif dan informatif.\nDalam eksplorasi ini, kita telah:\n\nâœ… Membuat visualisasi dasar dengan ggplot2\n\nâœ… Menambahkan animasi waktu menggunakan `transition_time()`\n\nâœ… Membuat subplot per benua dengan `facet_wrap()`\n\nâœ… Menampilkan pergerakan dinamis dengan `view_follow()`\n\nâœ… Menambahkan efek bayangan menggunakan `shadow_wake()`\n\nâœ… Menampilkan jejak perubahan data dengan `shadow_mark()`\n\nHasilnya?\nTren perkembangan GDP per kapita, harapan hidup, dan populasi dari waktu ke waktu bisa lebih mudah dipahami!\nðŸŽ¬ðŸ“Š\n\nDengan sedikit kreativitas, kita bisa membuat animasi yang lebih menarik dan eksploratif untuk berbagai jenis data.\n`gganimate` bukan hanya alat visualisasi, tetapi juga bisa menjadi media storytelling yang powerful dalam data science!\nðŸš€.\nðŸ”¥Tertarik mencoba animasi lain?\nEksplorasi lebih lanjut dengan `gganimate` dan buat visualisasi yang semakin keren!\nðŸ˜ƒ\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}